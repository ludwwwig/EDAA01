package TestAppendFifoQueue;

import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;

import queue.FifoQueue;

public class TestAppendFifoQueue {
	private FifoQueue<Integer> myIntQueue;
	private FifoQueue<Integer> yourIntQueue;
	
	@Before
	public void setUp() throws Exception {
		myIntQueue = new FifoQueue<Integer>();
		yourIntQueue = new FifoQueue<Integer>();
	}
	
	@Test
	public void appendToEmpty() {
		yourIntQueue.offer(1);
		yourIntQueue.offer(2);
		yourIntQueue.offer(3);
		
		myIntQueue.append(yourIntQueue);
		for(Integer i : myIntQueue)
			System.out.println(i);
		System.out.println("appendToEmpty done.");
	}
	
	@Test
	public void appendEmpty() {
		myIntQueue.offer(1);
		myIntQueue.offer(2);
		myIntQueue.offer(3);
		myIntQueue.append(yourIntQueue);
		for(Integer i : myIntQueue)
			System.out.println(i);
		System.out.println("appendEmpty done.");
	}
	
	@Test
	public void appendBothNotEmpty() {
		myIntQueue.offer(1);
		myIntQueue.offer(2);
		myIntQueue.offer(3);

		yourIntQueue.offer(7);
		yourIntQueue.offer(8);
		yourIntQueue.offer(10);
		
		myIntQueue.append(yourIntQueue);

		for(Integer i : myIntQueue)
			System.out.println(i);
		System.out.println("appendBotNotEmpty done.");
		
	}
	
	@Test
	public void appenBothEmpty() {
		myIntQueue.append(yourIntQueue);
		System.out.println("" + myIntQueue.size());
	}

}
